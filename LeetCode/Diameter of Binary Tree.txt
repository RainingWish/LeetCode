/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    private int max = 0;
    
    public int diameterOfBinaryTree(TreeNode root) {
        //recursion
        maxDepth(root);
        return max;
    }
    
    private int maxDepth(TreeNode root){
        //check null
        if(root == null){
            return 0;
        }
        //pass left and right to the function again
        int L = maxDepth(root.left);
        int R = maxDepth(root.right);
        //L to root to R
        max = Math.max(max, L+R);
        return Math.max(L,R)+1;
        
    }
}