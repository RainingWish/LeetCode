class Trie {

    private Trie[] next;
    private boolean word;
    
    /** Initialize your data structure here. */
    public Trie() {
        this.next = new Trie[26];
        this.word = false;
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        Trie[] next = this.next;
        for(int i = 0; i < word.length(); i++) {
            int index = word.charAt(i)-'a';
            if(next[index] == null){
                next[index] = new Trie();
            }
            if(i == word.length()-1) {
                next[word.charAt(i)-'a'].word = true;
            }
            next = next[index].next;
        }
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
        Trie[] next = this.next;
        for(int i = 0; i < word.length(); i++) {
            int index = word.charAt(i)-'a';
            if(next[index] == null){
                return false;
            }
            if(i == word.length()-1) {
                return next[word.charAt(i)-'a'].word;
            }
            next = next[index].next;
        }
        return true;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        Trie[] next = this.next;
        for(int i = 0; i < prefix.length(); i++) {
            int index = prefix.charAt(i)-'a';
            if(next[index] == null){
                return false;
            }
            
            next = next[index].next;
        }
        return true;
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */