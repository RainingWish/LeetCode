class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List ans = new ArrayList();
        //check null
        if (matrix.length == 0) return ans;
        //total row
        int r1 = 0, r2 = matrix.length - 1;
        //total coloum
        int c1 = 0, c2 = matrix[0].length - 1;
        //keep looping until it rich the center
        while (r1 <= r2 && c1 <= c2) {
            //add first coloum front to end
            for (int c = c1; c <= c2; c++) ans.add(matrix[r1][c]);
            //add last row top to bot
            for (int r = r1 + 1; r <= r2; r++) ans.add(matrix[r][c2]);
            if (r1 < r2 && c1 < c2) {
                //add last coloum back to front
                for (int c = c2 - 1; c > c1; c--) ans.add(matrix[r2][c]);
                //add first row bot to top
                for (int r = r2; r > r1; r--) ans.add(matrix[r][c1]);
            }
            //finish first round, go to next round
            //start point of row and coloum +1
            //end point -1
            r1++;
            r2--;
            c1++;
            c2--;
        }
        return ans;
    }
}